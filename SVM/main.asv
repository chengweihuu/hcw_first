clear;
clc;
%% 导入wyw的obs
load wyw_obs.mat
scatter3(obs(:,1),obs(:,2),obs(:,3),'.');
hold on
%% 机器人初始点位信息
X_home=[0,0,0,0,0,0]; %设置机器人home位的configuration
X_start=deg2rad([12.88,-74.68,46.91,-150.99,-12.88,-1.17]);
X_goal=deg2rad([11.63,-65.03,98.75,147.4300,-11.66,-1.2]);
start_point=Forward_kinematic(X_start,8);
goal_point=Forward_kinematic(X_goal,8);
scatter3(start_point(1),start_point(2),start_point(3),'*','r'); hold on;
scatter3(goal_point(1),goal_point(2),goal_point(3),'*','g');hold on;
%% 建立机器人模型
%       theta     d           a        alpha     offset
L1=Link([pi/2     89.2        0         pi/2       0     ]); %定义连杆的D-H参数
L2=Link([-pi/2    0        -425            0       0     ]);
L3=Link([0        0        -392            0       0     ]);
L4=Link([0        109.3       0         pi/2       0     ]);
L5=Link([0        94.75       0        -pi/2       0     ]);
L6=Link([0        82.5        0            0       0     ]);
robot=SerialLink([L1 L2 L3 L4 L5 L6],'name','FANUC 200iB/125L'); %连接连杆，机器人取名manji

%% 为每一个关节设置旋转角度限制
l1u = 180.0;l1d = -180.0;
l2u = 180.0;l2d = -180.0;
l3u = 180.0;l3d = -180.0;
l4u = 180.0;l4d = -180.0;
l5u = 180.0;l5d = -180.0;
l6u = 360.0;l6d = -360.0;
robot.teach;

%% 
DCL=[];ECL=[];allpoint=[];
X_mid = (X_start+X_goal)/2 ;

Sigma = [0.2 0 0; 0 0.2 0;0 0 0.2]; % 协方差矩阵，必须为正定矩阵
mu =X_mid(1:3); % 均值
dim = size(Sigma, 1); % 样本维度
n = 1000; % 样本数量
L_chol = chol(Sigma, 'lower'); % get the loweer triangle matrix, L_chol*Lchol' = Sigma
tmp = randn(n, dim); % tmp ~ N(0, I)
mu_vec = repmat(mu, n, 1); % 均值向量, size(mu_vec) = (n, dim)
samples = (L_chol*tmp')'; % samples ~ C*N(0,I), size(samples) = (n, dim)
theta = mu_vec + samples;
sample_theta=theta;
for i = 1:n
    A=rand_theta_f;
    sample_theta(i,4:6)=A(4:6);
end
for i =1:size(sample_theta,1)
    if CollisionCheck_3(sample_theta(i,1:6),obs)
        sample_theta(i,7) = 1;
    else
        sample_theta(i,7) = 0;
    end
end


















